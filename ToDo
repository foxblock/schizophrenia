DIE BESCHREIBUNG IST NICHT FERTIG!

Gedanken zur Physik. Meines bisherigen Ansätze ware ja immer ab einem gewissen
Punkt zum Scheitern verurteilt. Also auf ein neues. Es gibt, das behalte ich
bei, zwei Arten von Objekten: Statisch und Dynamisch. Statisch ist der
Hintergrund, Dynamisch der Rest. Kisten, Türen, Spieler, Plattformen, sowie alle
Schalter.

Die dynamischen Objekte besitzen Eigenschaften:
* Position (X,Y)
* Größe (W,H)
* Geschwindigkeit (SX,SY). Beschleunigung (außer Gravitation) ist Sache des
  konkretes Objektes.
* neue Geschwindigkeit, siehe unten
* Schwebend bedeutet, dass das Objekt nicht von Gravitation beeinflusst wird.
* Moveable bedeutet, dass es von außen bewegt werden kann ("schieben"). Diese
  Eigenschaft haben der Spieler und Kisten.
* Platform bedeutet, dass das Objekt eine Platform ist, also, dass Objekte auf
  diesem Objekt mitbewegt werden. Ich denke es ist sinnvoll in der Physik
  konkreter zu werden, mein bisheriger Ansatz einer generischen Physik, die ich
  geschickt durch Feedbackfunktionen spezialisiere ging ja eher schief...
* Background bedeutet, das Objekt kollidiert zwar, aber es passiert nichts. Z.B.
	bei Schaltern.

Idee 1:
Die Physik ansich verläuft seriell und auch nur für Objekte, die sich bewegen.
Vielleicht ordne ich vorher nach Geschwindigkeit. Ein Objekt nach dem anderen
bewegt sich um Gravitation und seine X und Y Geschwindigkeit. Die
Geschwindigkeit wird mittels setSpeed feedback function immer neu gesetzt bzw.
auf "next speed" addiert. Wenn es eine (oder gar mehrere) Kollisionen gibt, wird
für jede Kollision einzeln (!) eine Feedbackfunktion des Objektes aufgerufen,
dass es sich bewegt und es gerumst hat. Es bekommt folgende Informationen:
* Pointer zu der Position (damit man sie u.U. zurücksetzen kann)
* alte Position
* Pointer zu next Speed des gerumsten Objektes. Statt auf 0, wird die
  Geschwindigkeit auf diesen Wert gesetzt.
Wenn sich eine platform bewegt, werden alle Objekte auf ihr mitbewegt.

Idee 2:
Alle Bewegungen (Graviation, X und Y) von allen beweglichen Objekten passieren
gleichzeitig. Wenn sich eine Platform bewegt, bewegt sich alles "auf" ihr mit.
Seriell wird jede Kollision durchgegangen und aufgelöst, meist durch
zurücksetzen der Position. Wenn zurückgesetzt wurde, werden alle Objekte, die
ihre neue Position behalten haben neu getestet bis es kein bewegtes Objekt mehr
gibt oder keine Kollision mit diesen.

Maßnahmen gegen "Zittern":
Bisher war es so, wenn man sich auf einer Platform bewegt hat, zitterte man. Das
ist aufgrund der Umrechnung von Welt in Pixelkoordinaten. Bei dieser wird der
"Rest" abgeschnitten. Wenn ich den "Rest" von Spieler und Plattform gleichsetze
und gleichmäßig verändere, würde der Effekt weg gehen. Aber dann wird das Laufen
auf der Plattform vielleicht komisch... u.U. sollte ich doch auf Pixelgenaue
Physik zurückgreifen. Oder ich merke beim Zeichnen, dass der Spieler auf einer
Plattform ist und synchronisiere nur beim Zeichnen - nicht Physikintern

Ziz:
+ Bewegung der Platformen
+ Gravitationskollisionsketten
+ Y-Verschub
- Schubkollisionsketten
- X-Verschub
- Bewegung in Abhängigkeit von gedrückten Schaltern
- Energieanzeige
- Klonbarparameter
- Klonbare Objekte markieren
  - Nichtklonbare auch?
- Löschen
- Klonen
- Beachten von Nichtlöschenbereichen
  - Zeichnen als beliebigfarbiges Schwirren von 1-Pixel-Partikeln
- Puzzleteile anzeigen (+ gesammelte)
- Puzzleteile sammeln

Foxblock:
- Teamlogo
- Vielleicht für die Collectibles noch eine Art "Schattenbild". Also nur die
  Kontur, als eine Art... "Rahmen", wo die dann eingefügt werden, wenn man sie
  findet.
- Box-Todes Ani
- Quantenverschränktheit-Effekt
- Nicht-Klonbar-Effekt

Details, die man irgendwann mal machen kann, was aber spieltechnisch kaum was ändert:
- Scale2x für die Pandora und PC
- Todesanimation abspielen wenn Objekt/Spieler stirbt
- Sound- und Bildeffekt wenn ein Physiker stirbt oder gelöscht wird
- Effekt wenn man Puzleteile einsammelt (Flashbacks - nachdem man alle Puzzleteile )
- Cursor standardmäßig etwas in Blickrichtung vom Physiker weg platzieren um ungewolltes Löschen zu vermeiden
- Cursor-Bewegung beschleunigen (keine konstante Geschwindigkeit)
- Sounds
- Musik
- Cursor-Reichweite anzeigen
	- Anzeige des Klon-Radius (Halbtransparenter Kreis)
- Nicht-klonbare Objekte und Bereiche durch Effekt darstellen (in der normalen Ansicht)
  -> Klonbare Objekte besser hervorheben (Spieler haben nicht kapiert was sie zu tun haben), evtl Tips einblenden
     wenn Spieler länger stillsteht oder bei ersten Klonvorgängen "assistieren" (zB Markierung von nahen, klonbaren
     Objekten - "clone me")
- Quantenverschränkte Objekte durch Effekt darstellen
- Erzeuge Partikel wenn etwas zerstört wird, welche dann zur Fernbedienung fliegen (-> Verdeutlichung, dass diese dadurch aufgeladen wird)
- In-Game Hilfe in ersten Leveln zum Klonen (kein Text, entweder Pfeil-Overlays "Klick here to clone this" oder Bilder im Hintergrund)

Level:
- Ideen? (Anspielungen, Themen aus der Physik, etc.)

Überdenken:
- Quantenverschränktheit
- freie Steuerungskonfiguration
- Keine freie Bewegung des Klon/Destroy-Fadenkreuzes, sondern direkte Auswahl der Objekte in der Umgebung ???
- Hintergründe? Oder doch sich selbst sehen? Würde das zumindest gerne mal ausprobieren.
- Nur klonen wenn man fest auf dem Boden steht (ist sonst zu leicht explotable), auf Platformen evtl auch
  -> Nur klonen wenn das zu klonende Objekt fest auf dem Boden steht
